name: 'Telepresence Intercept'
description: 'Intercepts a service in a remote cluster'
inputs:
  telepresence_api_key:
    description: API KEY to login in app.getambassador.io
    required: true
  service_name:
    description: The name of the ervice to intercept
    required: true
  service_port:
    description: The port to intercept
    required: true
  kubeconfig_file:
    description: Content of the  kubernetes configuration used with kubectl
    required: true
  namespace:
    description: The namespace of the service to intercept
    required: false
    default: default
  http_header:
    description: Only intercept traffic that matches this "HTTP2_HEADER=REGEXP" specifier
    required: false
    default: "x-telepresence-intercept-id=service-intercepted"
  env_file:
    description: Emit the remote environment to an env file in Docker Compose format
    required: false
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: datawire/development-telepresence-intercept
    - name: Install Telepresence
      shell: bash
      run: |
        sudo curl -fL https://app.getambassador.io/download/tel2/linux/amd64/latest/telepresence -o /usr/local/bin/telepresence
        sudo chmod a+x /usr/local/bin/telepresence
    - name: Create kubeconfig file
      shell: bash
      run: |
        cat <<EOF > /opt/kubeconfig
        ${{ inputs.kubeconfig_file }}
        EOF
        echo "KUBECONFIG=/opt/kubeconfig" >> $GITHUB_ENV
    - name: Connect Telepresence
      uses: ./login/
      with:
        telepresence_api_key: ${{inputs.telepresence_api_key}}
    - name: Define parameters
      shell: bash
      if: "${{ inputs.env_file != '' }}"
      run: |
        echo "PARAMETERS=${{env.PARAMETERS}} -e ${{ inputs.env_file }}" >> $GITHUB_ENV
    - name: Intercept the service
      shell: bash
      run: telepresence intercept ${{inputs.service_name}} --port ${{inputs.service_port}} --ingress-host ambassador.ambassador --ingress-port 80 --ingress-tls --ingress-l5 ambassador.ambassador -n ${{inputs.namespace}} --http-header=${{inputs.http_header}} ${{env.PARAMETERS}}

